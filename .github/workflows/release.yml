name: Create and Publish Release

on:
  push:
    tags:
      - "v*" # Trigger on tags that start with 'v' (e.g., v2.0.04)
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Read version and changes from files
      - name: Read version and changes
        id: prepare
        run: |
          VERSION=$(cat fen_light_version)
          RAW_CHANGES=$(cat fen_light_changes)

          # Convert BBCode to Markdown or inline HTML
          CONVERTED_CHANGES=$(echo "$RAW_CHANGES" \
            | sed -E 's/\[COLOR ([^]]+)\]/<span style="color:\1">/g' \
            | sed 's/\[\/COLOR\]/<\/span>/g' \
            | sed 's/\[B\]/**/g' \
            | sed 's/\[\/B\]/**/g')


          echo "$CONVERTED_CHANGES" > changes_processed.md
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=changes_path::changes_processed.md"

      # Step 3: Log the extracted version and changes (optional for debugging)
      - name: Log extracted values
        run: |
          echo "Version: ${{ steps.prepare.outputs.version }}"
          echo "Changes (converted):"
          cat ${{ steps.prepare.outputs.changes_path }}

      # Step 4: Create ZIP file with only specific files and folders
      - name: Create ZIP file
        id: zip
        run: |
          ZIP_NAME="plugin.video.fenlight-${{ steps.prepare.outputs.version }}.zip"
          zip -r $ZIP_NAME resources addon.xml
          echo "::set-output name=zip_name::$ZIP_NAME"

      # Step 5: Publish Release
      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.prepare.outputs.version }}"
          name: "Fenlight v${{ steps.prepare.outputs.version }}"
          bodyFile: ${{ steps.prepare.outputs.changes_path }}
          artifacts: ${{ steps.zip.outputs.zip_name }}
          prerelease: false
          allowUpdates: true
          replacesArtifacts: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Dispatch Event to AltFreq07/Fen-Light-Repo
      - name: Dispatch Event to Fen-Light-Repo
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.PAT_FOR_DISPATCH }}" \
            -H "Accept: application/vnd.github.everest-preview+json" \
            https://api.github.com/repos/AltFreq07/Fen-Light-Repo/dispatches \
            -d '{"event_type": "trigger-event", "client_payload": {"version": "${{ steps.prepare.outputs.version }}"}}'
        env:
          PAT_FOR_DISPATCH: ${{ secrets.PAT_FOR_DISPATCH }}
