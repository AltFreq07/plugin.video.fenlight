name: Create and Attach Release ZIP

on:
  push:
    tags:
      - "v*" # Trigger on tags that start with 'v' (e.g., v2.0.04)
  workflow_dispatch: # Allow manual trigger without requiring inputs

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Read version and changes from files
      - name: Read version and changes
        id: prepare
        run: |
          # Read the version from the fen_light_version file
          VERSION=$(cat fen_light_version)

          # Read and sanitize the changelog
          RAW_CHANGES=$(cat fen_light_changes)

          # Convert BBCode to Markdown or inline HTML
          CONVERTED_CHANGES=$(echo "$RAW_CHANGES" \
            | sed 's/\[COLOR darkgoldenrod\]/<span style="color:darkgoldenrod">/g' \
            | sed 's/\[COLOR red\]/<span style="color:red">/g' \
            | sed 's/\[\/COLOR\]/<\/span>/g' \
            | sed 's/\[B\]/**/g' \
            | sed 's/\[\/B\]/**/g')

          # Save the converted changes to a file for release notes
          echo "$CONVERTED_CHANGES" > changes_processed.md

          echo "::set-output name=version::$VERSION"
          echo "::set-output name=changes_path::changes_processed.md"

      # Step 3: Log the extracted version and changes (optional for debugging)
      - name: Log extracted values
        run: |
          echo "Version: ${{ steps.prepare.outputs.version }}"
          echo "Changes (converted):"
          cat ${{ steps.prepare.outputs.changes_path }}

      # Step 4: Create ZIP file with dynamic name
      - name: Create ZIP file
        id: zip
        run: |
          ZIP_NAME="plugin.video.fenlight-${{ steps.prepare.outputs.version }}.zip"
          zip -r $ZIP_NAME ./*
          echo "::set-output name=zip_name::$ZIP_NAME"

      # Step 5: Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
            tag_name: "v${{ steps.prepare.outputs.version }}"
            release_name: "Fenlight v${{ steps.prepare.outputs.version }}"
            body_path: ${{ steps.prepare.outputs.changes_path }}
            draft: false
            prerelease: false
            token: ${{ secrets.GITHUB_TOKEN }}
    

      # Step 6: Upload the ZIP as a release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.zip.outputs.zip_name }}
          asset_name: ${{ steps.zip.outputs.zip_name }}
          asset_content_type: application/zip
